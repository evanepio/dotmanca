[tool.poetry]
name = "dotmanca"
version = "4.0.0"
description = "The Official Dotman Website"
authors = ["Evan Porter"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "dotmanca", from = "src"},
    {include = "characters", from = "src"},
    {include = "comics", from = "src"},
    {include = "config", from = "src"},
    {include = "gallery", from = "src"},
    {include = "main", from = "src"},
    {include = "news", from = "src"},
    {include = "places", from = "src"},
    {include = "poetry_scripts.py", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.12"
Django = "^5.2"
pillow = "^11.3"
django-environ = "^0.12.0"
markdown = "^3.8"
django-markup = "^1.9"
gunicorn = "^23.0"
argon2-cffi = "^25.1"
psycopg2-binary = "2.9.10"
bleach = "^6.2.0"
bleach-allowlist = "^1.0.3"
boto3 = "^1.39.9"
django-storages = "^1.14"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^5.2.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.12.4"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-django = "^4.11.1"
pytest-env = "^1.1.5"
coverage = "^7.9.2"
django-coverage-plugin = "^3.1.1"

[tool.poetry.scripts]
server = "poetry_scripts:run_server"
manage = "poetry_scripts:manage"
lint = "poetry_scripts:run_lint"
check-format = "poetry_scripts:run_check_format"
format = "poetry_scripts:run_auto_format"
test = "poetry_scripts:run_tests"
coverage = "poetry_scripts:run_coverage"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
DJANGO_SETTINGS_MODULE = "config.settings.test"

[tool.coverage.run]
include = ["src/*"]
omit = ["*migrations*", "*tests*"]
plugins = ["django_coverage_plugin"]

[tool.black]
target-version = ["py311"]
exclude = """
/(
    .git
  | docs
  | migrations
  | htmlcov
  | .pytest_cache
)/
"""

[tool.isort]
profile = "black"
skip_glob = ["docs/*", "*/migrations/*"]

[tool.ruff]
exclude = [
    ".git",
    "*/migrations/*",
    "*/settings/*",
    "*/static/CACHE/*",
    "docs",
]
line-length = 120

[tool.ruff.lint]
ignore = []
select = [
    "E",
    "F",
    "W",
    "I",
    "N",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"