[tool.poetry]
name = "dotmanca"
version = "4.0.0"
description = "The Official Dotman Website"
authors = ["Evan Porter"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "dotmanca", from = "src"},
    {include = "characters", from = "src"},
    {include = "comics", from = "src"},
    {include = "config", from = "src"},
    {include = "gallery", from = "src"},
    {include = "main", from = "src"},
    {include = "news", from = "src"},
    {include = "places", from = "src"},
    {include = "poetry_scripts.py", from = "./"}
]

[tool.poetry.dependencies]
python = "^3.12"
Django = "^4.2"
pillow = "^10.0"
django-environ = "^0.11.2"
markdown = "^3.4"
django-markup = "^1.7"
gunicorn = "^21.2"
argon2-cffi = "^23.1"
psycopg2-binary = "2.9.9"
bleach = "^6.0.0"
bleach-allowlist = "^1.0.3"
boto3 = "^1.28.57"
django-storages = "^1.14"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^4.2.0"

[tool.poetry.group.format.dependencies]
black = "^23.9.1"

[tool.poetry.group.import-sort.dependencies]
isort = "^5.12.0"

[tool.poetry.group.lint.dependencies]
flake8 = "^6.1.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-django = "^4.5.2"
pytest-env = "^1.0.1"
coverage = "^7.3.1"
django-coverage-plugin = "^3.1.0"

[tool.poetry.scripts]
server = "poetry_scripts:run_server"
lint = "poetry_scripts:run_lint"
check-format = "poetry_scripts:run_check_format"
format = "poetry_scripts:run_auto_format"
sort-imports = "poetry_scripts:run_sort_imports"
test = "poetry_scripts:run_tests"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
DJANGO_SETTINGS_MODULE = "config.settings.test"

[tool.coverage.run]
include = ["src/*"]
omit = ["*migrations*", "*tests*"]
plugins = ["django_coverage_plugin"]

[tool.black]
target-version = ["py311"]
exclude = """
/(
    .git
  | docs
  | migrations
  | htmlcov
  | .pytest_cache
  | .tox
)/
"""

[tool.isort]
profile = "black"
skip_glob = ["docs/*", "*/migrations/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"