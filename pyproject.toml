[tool.poetry]
name = "dotmanca"
version = "4.0.0"
description = "The Official Dotman Website"
authors = ["Evan Porter"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "dotmanca", from = "src"},
    {include = "characters", from = "src"},
    {include = "comics", from = "src"},
    {include = "config", from = "src"},
    {include = "gallery", from = "src"},
    {include = "main", from = "src"},
    {include = "news", from = "src"},
    {include = "places", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.11"
Django = "^4.1"
pillow = "^9.3"
django-environ = "^0.9.0"
markdown = "^3.4"
django-markup = "^1.6"
gunicorn = "^20.1"
argon2-cffi = "^21.3"
psycopg2-binary = "2.9.5"
bleach = "^5.0.1"
bleach-allowlist = "^1.0.3"
boto3 = "^1.26.22"
django-storages = "^1.13.1"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^3.8.1"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]

[tool.coverage.run]
include = ["dotmanca/*", "characters/*", "gallery/*", "main/*", "news/*", "places/*"]
omit = ["*migrations*", "*tests*"]
plugins = ["django_coverage_plugin"]

[tool.black]
target-version = ["py311"]
exclude = """
/(
    .git
  | docs
  | migrations
  | htmlcov
  | .pytest_cache
  | .tox
)/
"""

[tool.isort]
profile = "black"
skip_glob = ["docs/*", "*/migrations/*"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py311
isolated_build = True
skipsdist = True

[testenv]
usedevelop = True
setenv = file|.env

[testenv:{test,coverage,coverage-html}]
envdir = {toxworkdir}/.test_and_coverage_env
setenv = 
    DJANGO_SETTINGS_MODULE=config.settings.test
deps = 
    pytest
    pytest-django
    pytest-env
    coverage
    django-coverage-plugin
commands:
    test: pytest
    coverage: coverage run -m pytest
    coverage-html: coverage html

[testenv:{check-format,check-imports,lint,black,isort}]
envdir = {toxworkdir}/.checker_env
deps =
    black
    isort
    flake8
commands =
    check-format: black . --check --diff
    check-imports: isort . --check-only
    lint: flake8
    black: black .
    isort: isort .
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"