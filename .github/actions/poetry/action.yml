name: "Run a poetry command"
description: "Builds and runs a poetry/tox environment"
inputs:
   python-version:
     required: true
     description: "The Python version to use"
   command:
     required: true
     description: "The command to run"
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install poetry
      run: pip install poetry==1.8.5
      shell: bash
    - name: Prepare environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
        poetry install
      shell: bash
    - name: Run command
      run: ${{ inputs.command }}
      shell: bash