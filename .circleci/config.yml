# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.7.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            pip install poetry
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            poetry run pytest

  deploy:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c0:e5:fe:d8:25:f1:36:62:07:95:fb:76:fc:e1:78:d7"
      - run:
          name: add known hosts
          command: |
            echo '|1|eds2w/IX0Ugn4S8tFhoZeasLtsc=|xsCvadpPza7UesOUkHwZraFMVn0= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICI86PYTrkRLkvTLXY7DT+TpqrAVkTj1XICmtJiYxvWt' >> ~/.ssh/known_hosts
            echo '|1|n7oB+b86/0Q8L3umtD+aj4STCl0=|t0YWT533XEqCAHzAnaUZjquHVoE= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD5iLLrUl6LIStPVKgqQUyjdUCCQ1s8dlfDTJa4rJruf7QO0Urpt9/866sk8qYqaAAzubId1j5CMBG/mC5aZAqGogvDzZtz/jdngT5TzbxKdd2DV5yVqcIkaZ4ZJX/o6dP1Uq+eCyFkeq+lq5QTesHLwSqz0bpRoUr0OjOupc9tpgBflBMLc/eUyqNtW9GFsruXC4kmS5IYblLsnbsKhUds4uOaWsUzSto5ofLOINq3LPvfLvUwE712eCWc2ATSz1HvaBLpbDZTHsTMZkiIhJcxSkIrSx7GTvNixrgRumVyKCAvpFqXjJPr3foS1bpeVt8w+8NxpnSoDc58FXq2jl3N' >> ~/.ssh/known_hosts
            echo '|1|q7Y539OCyQpI61fQpxnvj9FYLNQ=|NRUCJ+C/K52Z77Wtzq0O0AHb7Mk= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJS6HfwZ+mnF7TpiTjDV30xBdp4icYY5Vs4YNQ/0p93mXeMGeHzlBYg1VYGWZwoz3uxNTJJInxnUBcFDdfvfv8k=' >> ~/.ssh/known_hosts
      - run:
          name: deploy over ssh
          command: |
            ssh $SSH_USER@$SSH_HOST "export DJANGO_READ_DOT_ENV_FILE=True && git pull && poetry install --no-dev && poetry run python manage.py migrate && poetry run python manage.py collectstatic --no-input && sudo /bin/systemctl restart gunicorn"

workflows:
  version: 2

  # The build-and-test we will run EVERYTIME a piece of code changes
  ci-cd-workflow:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
